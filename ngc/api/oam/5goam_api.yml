---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "5G OAM API"
  contact:
    name: "intel"
    url: "github.com/otcshare/epcedge"
    email: "support@intel.com"
  license:
    name: "Apache 2.0 License"
    url: "https://github.com/otcshare/cups/epcedge/master/LICENSE"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /afRegisters:
    get:
      tags:
      - "5GOAM"
      summary: "GetAll list of afRegisters"
      description: "Retrieve all afRegisters"
      operationId: "GetAll"
      parameters: []
      responses:
        200:
          description: "All afRegisters"
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
    post:
      tags:
      - "5GOAM"
      summary: "Add to the registry of afRegisters"
      description: "Add an afRegister"
      operationId: "Add"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/afRegister"
        x-exportParamName: "Body"
      responses:
        200:
          description: "A successful response."
          schema:
            $ref: "#/definitions/afId"
        201:
          description: "Added "
          schema: {}
        400:
          description: "Invalid  properties provided"
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
  /afRegisters/{afId}:
    get:
      tags:
      - "5GOAM"
      summary: "Get afRegister by ID"
      description: "Retrieve by ID"
      operationId: "Get"
      parameters:
      - name: "afId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AfId"
      responses:
        200:
          description: "afRegister"
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
    delete:
      tags:
      - "5GOAM"
      summary: "Delete afRegister by ID"
      description: "Delete "
      operationId: "Delete"
      parameters:
      - name: "afId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AfId"
      responses:
        200:
          description: "A successful response."
          schema: {}
        204:
          description: "Deleted "
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
        404:
          description: "not found"
          schema: {}
    patch:
      tags:
      - "5GOAM"
      summary: "Update afRegister by ID"
      description: "Update"
      operationId: "Update"
      parameters:
      - name: "afId"
        in: "path"
        description: "The identifier of the afRegister (read-only)"
        required: true
        type: "string"
        x-exportParamName: "AfId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/afRegister"
        x-exportParamName: "Body"
      responses:
        200:
          description: "A successful response."
          schema: {}
        204:
          description: "Updated afRegister"
          schema: {}
        400:
          description: "Invalid afRegister properties provided"
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
        404:
          description: "afRegister not found"
          schema: {}
  /afRegisters/{afId}/locationServices/{dnai}:
    delete:
      tags:
      - "5GOAM"
      summary: "Delete location service by dnai for the afRegister"
      description: "Delete "
      operationId: "DeleteDns"
      parameters:
      - name: "afId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AfId"
      - name: "dnai"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Dnai"
      responses:
        200:
          description: "A successful response."
          schema: {}
        204:
          description: "Deleted "
          schema: {}
        403:
          description: "Unauthorized"
          schema: {}
        404:
          description: " not found"
          schema: {}
definitions:
  afInstance:
    type: "string"
    title: "Instance of a single afRegister"
  afId:
    type: "integer"
    title: "ID of a single afRegister"
  dnn:
    type: "string"
    title: "data network name"
  dnai:
    type: "string"
    title: "dnai"
  dns:
    type: "string"
    title: "dns IP address"
  locationService:
    type: "object"
    properties:
      dnai:
        $ref: "#/definitions/dnai"
      dnn:
        $ref: "#/definitions/dnn"
      dns:
        $ref: "#/definitions/dns"
    title: "Single location service info"
  locationServices:
    title: "Multiple location services info"
    type: "array"
    items:
      $ref: "#/definitions/locationService"
  afRegister:
    type: "object"
    properties:
      afInstance:
        type: "string"
        title: "The instance of afregister"
      locationServices:
        $ref: "#/definitions/locationServices"
    title: "Single afRegister info"
  afRegisters:
    title: "Multiple afRegister info"
    type: "array"
    items:
      $ref: "#/definitions/afRegister"
