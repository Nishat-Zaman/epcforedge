// Copyright 2019 Intel Corporation and Smart-Edge.com, Inc. All rights reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

// SubscribedEvent : The possible value is CHANGE_OF_DNAI - the AF requests to
// be notified when the UP path changes for the PDU isession.
type SubscribedEvent string

// List of SubscribedEvent
const (
	//UP_PATH_CHANGE SubscribedEvent = "UP_PATH_CHANGE" >> causing lint error
	UpPathChange SubscribedEvent = "UP_PATH_CHANGE"
)

// TrafficInfluSub is Traffic Influence Subscription structure
type TrafficInfluSub struct {
	// Identifies a service on behalf of which the AF is issuing the request.
	afServiceID string `json:"afServiceId,omitempty"`
	// Identifies an application.
	afAppID string `json:"afAppId,omitempty"`
	// Identifies an NEF Northbound interface transaction, generated by the AF.
	fTransID string `json:"afTransId,omitempty"`
	// Identifies whether an pplication can be relocated once a location of the
	// application has been selected.Set to "true" if it can be relocated; otherwise set to
	// "false". Default value is "false" if omitted.
	appReloInd bool `json: "appReloInd,omitempty"`
	// Identifies data network name
	dnn Dnn `json:"dnn,omitempty"`
	// Network slice identifier
	snssai Snssai `json:"snssai,omitempty"` //p
	// string containing a local identifier followed by \"@\" and
	// a domain identifier.
	// Both the local identifier and the domain identifier shall be encoded as
	// strings that do not contain any \"@\" characters.
	// See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
	externalGroupID string `json:"externalGroupId,omitempty"`
	//Identifies whether the AF request applies to any UE. This attribute shall set to "true" if
	// applicable for any UE, otherwise, set to "false"
	anyUeInd bool `json:"anyUeInd,omitempty"`
	// Identifies the requirement to be notified of the event(s).
	SubscribedEvents []SubscribedEvent `json:"subscribedEvents,omitempty"`
	//Generic Public Servie Identifiers asssociated wit the UE
	gpsi Gpsi `json:"gpsi,omitempty"`
	// string identifying a Ipv4 address formatted in the \"dotted decimal\"
	//notation as defined in IETF RFC 1166.
	ipv4Addr Ipv4Addr `json:"ipv4Addr,omitempty"`
	// string identifying a Ipv6 address formatted according to clause 4
	// in IETF RFC 5952.
	ipv6Addr Ipv6Addr `json:"ipv6Addr,omitempty"`
	// string identifying mac address of UE
	macAddr MacAddr48 `json:"macAddr,omitempty"`
	// Identifies the type of notification regarding UP path management event.
	// Possible values are:
	// EARLY - early notification of UP path reconfiguration.
	// EARLY_LATE - early and late notification of UP path reconfiguration.
	// This value shall only be present in the subscription to the
	// DNAI change event.
	// LATE - late notification of UP path reconfiguration.
	dnaiChgType DnaiChangeType `json:"dnaiChgType,omitempty"`
	// URL where notifications shall be sent
	notificationDestination Link `json:"notificationDestination,omitempty"`
	// Set to true by the AF to request the NEF to send a test notification. //p
	//Set to false or omitted otherwise.
	requestTestNotification bool `json:"requestTestNotification,omitempty"`
	// Configuration used for sending notifications though web sockets
	websockNotifConfig WebsockNotifConfig `json:"websockNotifConfig,omitempty"`
	// URL of created subscription resource
	self Link `json:"self,omitempty"`
	// Identifies IP packet filters.
	trafficFilters []FlowInfo `json:"trafficFilters,omitempty"`
	// Identifies Ethernet packet filters.
	ethTrafficFilters []EthFlowDescription `json:"ethTrafficFilters,omitempty"`
	// Identifies the N6 traffic routing requirement.
	trafficRoutes []RouteToLocation `json:"trafficRoutes,omitempty"`
	// Settings for temporary validity of the subscription
	tempValidities []TemporalValidity `json:"tempValidities,omitempty"`
	// Identifies a geographic zone that the AF request applies only to the
	// traffic of UE(s) located in this specific zone.
	validGeoZoneIDs []string `json:"validGeoZoneIds,omitempty"`
	// String identifying supported features per Traffic Influence service
	suppFeat SupportedFeatures `json:"suppFeat,omitempty"`
}

// TrafficInfluSubPatch Traffic Influence Subscription Patch structure
type TrafficInfluSubPatch struct {
	// Identifies whether an application can be relocated once a location of
	// the application has been selected.
	appReloInd bool `json:"appReloInd,omitempty"`
	// Identifies IP packet filters.
	trafficFilters []FlowInfo `json:"trafficFilters,omitempty"`
	// Identifies Ethernet packet filters.
	ethTrafficFilters []EthFlowDescription `json:"ethTrafficFilters,omitempty"`
	// Identifies the N6 traffic routing requirement.
	trafficRoutes []RouteToLocation `json:"trafficRoutes,omitempty"`
	// Settings for temporary validity of the subscription
	tempValidities []TemporalValidity `json:"tempValidities,omitempty"`
	// Identifies a geographic zone that the AF request applies only to the
	// traffic of UE(s) located in this specific zone.
	validGeoZoneIDs []string `json:"validGeoZoneIds,omitempty"`
}

// TemporalValidity Indicates the time interval(s) during which the AF request
// is to be applied
type TemporalValidity struct {
	// string with format \"date-time\" as defined in OpenAPI.
	startTime string `json:"startTime,omitempty"`
	// string with format \"date-time\" as defined in OpenAPI.
	stopTime string `json:"stopTime,omitempty"`
}
